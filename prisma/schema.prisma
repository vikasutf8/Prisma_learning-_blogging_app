// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User{ 
  id Int @id @default(autoincrement()) // by defualt ids starts then increase
  name String? // optional ha
  email String @unique
  password String? // authenctication method uses
  created_at DateTime @default(now())
  comment Comment[]
  post Post[] 
  // why i takes its array as simple i user can create many post/question etc ... 1 to n relationship
}

model Post{
  id Int @id  @default(autoincrement())
  user User @relation(fields: [user_id],references: [id], onDelete:Cascade ) //fild is crrent table ka relation and reference is outer table
  user_id Int 
  title String
  description String?
  comment_count Int @default(0)
  created_at DateTime @default(now())
  comment Comment[] // single video/question par multiple comment hote ha
}

model Comment {
  id String @id @default(uuid()) //32-bit log
  post Post @relation(fields: [post_id],references: [id], onDelete: Cascade)
  post_id Int
  user User @relation(fields :[user_id] ,references: [id], onDelete: Cascade)
  user_id Int
  comment String
  created_at DateTime @default(now())
}